Artifacts_root:
  raw_file: artifacts/raw.csv
  test_file: artifacts/test.csv
  train_file: artifacts/train.csv
  precprocessor_obj : artifacts/preprocessor.pkl
  model_obj: artifacts/model.pkl
  preprocessor_obj: artifacts/preprocessor.pkl

#Mongo db deatils
Mongo_database:
  url:  mongodb+srv://sairam:sairam8662@cluster0.lyahcgb.mongodb.net/?retryWrites=true&w=majority
  Database: Spam_Detection
  Collection: sms_spam_detection


Dataframe:
  input_column: message
  target_column: label
  extra_column: _id

TFIDF_parameters:
  max_features: 5000

Model_Training_Parameters:
  test_size : 0.30
  random_state: 0


  

Model_Hyperparameter:
    Logistic_regression: 
      penalty: ['l2','l1','elasticnet',None]
      solver: ['liblinear','lbfgs','newton-cholesky']
    knearest_neighbor:
      n_neighbors: [1,3,5,7,9,11]
      algorithm: ['kd_tree','ball_tree','brute']

    RandomForest:
      n_estimators: [100,56,80,45]
      criterion: ['gini', 'entropy', 'log_loss']
      max_depth: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
      min_samples_split : [1,2,4,8]
      min_samples_leaf : [2,4,5,8]
      max_features: ['sqrt', 'log2']
    
    NaiveBays:
      alpha: [1.0,1.1,1.3]
    
    SupportVector:
      C: [1.0,1.1,1.2]
      Kernal: ['linear', 'poly', 'rbf', 'sigmoid', 'precomputed']
      gamma: ['scale', 'auto']

    GradientBoosting:
      loss: ['log_loss','exponential']
      learning_rate: [1.0,1.2,1.4]
      n_estimators: [100,56,80,45]
      criterion: ['friedman_mse','squared_error']
      max_depth: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
      max_features: ['sqrt', 'log2']



